type: edu
files:
  - name: src/bullscows/Main.java
    visible: true
    text: |
      package bullscows;
      
      public class Main {
          public static void main(String[] args) {
              System.out.println("Hello World!");
          }
      }
    learner_created: false
  - name: test/BullsCowsTest.java
    visible: false
    text: |-
      import bullscows.Main;
      import org.hyperskill.hstest.dynamic.input.DynamicTestingMethod;
      import org.hyperskill.hstest.stage.StageTest;
      import org.hyperskill.hstest.testcase.CheckResult;
      import org.hyperskill.hstest.testing.TestedProgram;
      
      import java.util.ArrayList;
      import java.util.Arrays;
      import java.util.LinkedHashSet;
      import java.util.List;
      import java.util.stream.Collectors;
      
      import static org.hyperskill.hstest.testing.expect.Expectation.expect;
      
      public class BullsCowsTest extends StageTest<String> {
      
          // basic test case
          @DynamicTestingMethod
          CheckResult test1() {
              TestedProgram main = new TestedProgram();
              main.start();
              String output = main.execute("4").toLowerCase().trim();
      
              return outputCheck(output, 4);
          }
      
          @DynamicTestingMethod
          CheckResult test2() {
              TestedProgram main = new TestedProgram();
              main.start();
              String output = main.execute("1").toLowerCase().trim();
      
              return outputCheck(output, 1);
          }
      
          // test of incorrect input
          @DynamicTestingMethod
          CheckResult test4() {
              TestedProgram main = new TestedProgram();
              main.start();
              String output = main.execute("11").toLowerCase().trim();
      
              return outputCheck(output, 11);
          }
      
          @DynamicTestingMethod
          CheckResult test5() {
              TestedProgram main = new TestedProgram();
              main.start();
              String output = main.execute("6").toLowerCase().trim();
      
              return outputCheck(output, 6);
          }
      
          @DynamicTestingMethod
          CheckResult test6() {
              TestedProgram main = new TestedProgram();
              main.start();
              String output = main.execute("3").toLowerCase().trim();
      
              return outputCheck(output, 3);
          }
      
      
          CheckResult outputCheck(String source, int length) {
      
              if (length > 10) {
                  if (source.toLowerCase().contains("error")) {
                      return CheckResult.correct();
                  } else {
                      return CheckResult.wrong("An error message expected with input " +
                              "\"" + length + "\"");
                  }
              }
      
              List<Integer> integers = expect(source).toContain(1).integers();
              source = "" + integers.get(0);
      
              if (source.length() != length) {
                  return CheckResult.wrong("The output number of your program has " +
                          "an incorrect length (found " + source.length() + ")");
              }
      
              List<Integer> temp = stringToArrayOfNumbers(source);
              temp = new ArrayList<>(new LinkedHashSet<>(temp));
      
              if (temp.toArray().length != source.length()) {
                  return CheckResult.wrong("Digits in the generated number are not unique.");
              }
      
              return CheckResult.correct();
          }
      
          private static List<Integer> stringToArrayOfNumbers(String array) {
              return Arrays.stream(array.split(""))
                      .map(Integer::parseInt)
                      .collect(Collectors.toList());
          }
      }
    learner_created: false
  - name: src/bullscows/Turn.java
    visible: true
    text: |
      package bullscows;
      
      public record Turn(Integer input, Integer secret) {
      
          public Integer bulls() {
              int bulls = 0;
              for (int i = 0; i < secret.toString().length(); i++) {
                  if (input.toString().charAt(i) == secret.toString().charAt(i)) {
                      bulls++;
                  }
              }
      
              return bulls;
          }
      
          public Integer cows() {
              int cows = 0;
      
              for (int i = 0; i < secret.toString().length(); i++) {
                  if (input.toString().charAt(i) != secret.toString().charAt(i)) {
                      if (input.toString().contains(String.valueOf(secret.toString().charAt(i)))) {
                          cows++;
                      }
                  }
              }
      
              return cows;
          }
      
          public boolean match() {
              return bulls() == secret.toString().length();
          }
      
          public void print() {
              System.out.print("Grade: ");
      
              if ((bulls() + cows()) == 0) {
                  System.out.print("None.");
              } else if (cows() == 0) {
                  System.out.print(bulls() + " bull(s).");
              } else if (bulls() == 0) {
                  System.out.print(cows() + " cow(s).");
              } else {
                  System.out.print(bulls() + " bull(s) and " + cows() + " cow(s).");
              }
      
              System.out.print(" The secret code is " + secret.toString() + ".");
              System.out.println();
          }
      }
    learner_created: true
  - name: src/bullscows/Game.java
    visible: true
    text: |
      package bullscows;
      
      import java.util.Scanner;
      
      public class Game {
      
          private Integer secret;
      
          public Game(Integer secret) {
              this.init(secret);
          }
      
          private void init(Integer secret) {
              this.secret = secret;
              // System.out.println("The secret code is prepared: ****");
          }
      
          public void run() {
              Turn turn = new Turn((new Scanner(System.in)).nextInt(), secret);
      
              turn.print();
          }
      }
    learner_created: true
feedback_link: https://hyperskill.org/learn/step/5431#comment
status: Solved
feedback:
  message: Congratulations!
  time: "Tue, 09 Jan 2024 13:40:14 UTC"
record: 3
